Полиморфизм - способность программы выбирать различные реализации, при вызове операций с одним и тем же названием.
(один метод можно применять к разным объектам)
Инкапсуляция — это создание сущностей как «вещей в себе». Классы должны работать независимо друг от друга: если какая-то сущность, например, 
удалится, это не повлияет на принцип работы остальных.

Абстракция — это принцип, когда какие-то общие вещи сводятся до набора абстрактных признаков. То есть мы имеем не абсолютно разные классы «картинка», 
«видео», «текст», а абстрактный класс «контент».

Наследование — это возможность делать на основе одних сущностей другие. Обычно в качестве «родителя» используются абстрактные сущности, а от них 
наследуются уже более конкретные.

Вид отношений между классами – включение, в объектно-ориентированном программировании различают два вида этого отношения – композицию и агрегацию. 
Напомню, что композиция – это разновидность включения, когда объекты неразрывно связаны друг с другом (время их жизни совпадает), в случае агрегации, 
время жизни различно (например, когда объект вложенного класса может быть заменен другим объектом во время выполнения программы).

asd